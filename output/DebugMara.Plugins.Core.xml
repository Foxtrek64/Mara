<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Mara.Plugins.Core</name>
    </assembly>
    <members>
        <member name="T:Mara.Plugins.Core.Commands.AboutCommand">
            <summary>
            A command which provides information about the bot.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Commands.AboutCommand.#ctor(Remora.Discord.Commands.Feedback.Services.FeedbackService,Remora.Discord.API.Abstractions.Rest.IDiscordRestUserAPI,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{Mara.Common.Models.MaraConfig})">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Commands.AboutCommand"/> class.
            </summary>
            <param name="feedbackService">The Command Feedback service.</param>
            <param name="userApi">A <see cref="T:Remora.Discord.API.Abstractions.Rest.IDiscordRestUserAPI"/> for getting user information.</param>
            <param name="memoryCache">A memory cache.</param>
            <param name="config">The bot config.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Commands.AboutCommand.ShowBotInfoAsync">
            <summary>
            Provides an informational embed describing the bot.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="T:Mara.Plugins.Core.CoreConstants">
            <summary>
            A set of constants for the Core plugin.
            </summary>
        </member>
        <member name="F:Mara.Plugins.Core.CoreConstants.DismissableEmbedFooter">
            <summary>
            Gets a default footer that is used on dismissable embeds.
            </summary>
        </member>
        <member name="T:Mara.Plugins.Core.CoreConstants.CacheKeys">
            <summary>
            A collection of keys for IMemoryCache objects.
            </summary>
        </member>
        <member name="F:Mara.Plugins.Core.CoreConstants.CacheKeys.BotUser">
            <summary>
            A cache key for storing and retrieving the current bot user.
            </summary>
        </member>
        <member name="F:Mara.Plugins.Core.CoreConstants.CacheKeys.CurrentApplication">
            <summary>
            A cache key for storing and retrieving the current application.
            </summary>
        </member>
        <member name="F:Mara.Plugins.Core.CoreConstants.CacheKeys.ShardNumber">
            <summary>
            A cache key for storing and retrieving the current shard number.
            </summary>
        </member>
        <member name="F:Mara.Plugins.Core.CoreConstants.CacheKeys.Uptime">
            <summary>
            A cache key for storing and retrieving the bot's up time.
            </summary>
        </member>
        <member name="T:Mara.Plugins.Core.CorePlugin">
            <summary>
            Represents core functionality.
            </summary>
        </member>
        <member name="P:Mara.Plugins.Core.CorePlugin.Name">
            <inheritdoc />
        </member>
        <member name="P:Mara.Plugins.Core.CorePlugin.Version">
            <inheritdoc />
        </member>
        <member name="P:Mara.Plugins.Core.CorePlugin.Description">
            <inheritdoc />
        </member>
        <member name="M:Mara.Plugins.Core.CorePlugin.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <inheritdoc />
        </member>
        <member name="M:Mara.Plugins.Core.CorePlugin.InitializeAsync(System.IServiceProvider,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Mara.Plugins.Core.Responders.DeleteRequestResponder">
            <summary>
            A responder which handles removing eligible embeds flagged with the X emoji.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.DeleteRequestResponder.#ctor(Remora.Discord.Rest.API.DiscordRestChannelAPI,Microsoft.Extensions.Logging.ILogger{Mara.Plugins.Core.Responders.DeleteRequestResponder})">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Responders.DeleteRequestResponder"/> class.
            </summary>
            <param name="channelApi">An instance of <see cref="T:Remora.Discord.Rest.API.DiscordRestChannelAPI"/>.</param>
            <param name="logger">A logger for this event handler.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.DeleteRequestResponder.Handle(Remora.Discord.API.Gateway.Events.MessageReactionAdd,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Mara.Plugins.Core.Responders.PostExectionResponder">
            <summary>
            A post-execution event responder which handles alerting the user to errors.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.PostExectionResponder.#ctor(Remora.Discord.Commands.Feedback.Services.FeedbackService)">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Responders.PostExectionResponder"/> class.
            </summary>
            <param name="feedback">A feedback service.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.PostExectionResponder.AfterExecutionAsync(Remora.Discord.Commands.Contexts.ICommandContext,Remora.Results.IResult,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Mara.Plugins.Core.Responders.ReadyResponder">
            <summary>
            Handles post-startup tasks, such as setting the bot presence and registering global slash commands.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.ReadyResponder.#ctor(Microsoft.Extensions.Logging.ILogger{Mara.Plugins.Core.Responders.ReadyResponder},Remora.Discord.Gateway.DiscordGatewayClient,Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Responders.ReadyResponder"/> class.
            </summary>
            <param name="logger">A logger.</param>
            <param name="gatewayClient">A gateway client.</param>
            <param name="memoryCache">A memory cache which will store the ready event.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.ReadyResponder.Handle(Remora.Discord.API.Abstractions.Gateway.Events.IReady,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Mara.Plugins.Core.Responders.SlashCommandRegistrationResponder">
            <summary>
            Registers server-level slash commands.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.SlashCommandRegistrationResponder.#ctor(Remora.Discord.Commands.Services.SlashService,Microsoft.Extensions.Logging.ILogger{Mara.Plugins.Core.Responders.SlashCommandRegistrationResponder})">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Responders.SlashCommandRegistrationResponder"/> class.
            </summary>
            <param name="slashService">The slash service.</param>
            <param name="logger">A logger.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.SlashCommandRegistrationResponder.RespondAsync(Remora.Discord.API.Abstractions.Gateway.Events.IGuildCreate,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Mara.Plugins.Core.Responders.UnknownEventResponder">
            <summary>
            An event responder which logs unknown events.
            </summary>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.UnknownEventResponder.#ctor(Microsoft.Extensions.Logging.ILogger{Mara.Plugins.Core.Responders.UnknownEventResponder})">
            <summary>
            Initializes a new instance of the <see cref="T:Mara.Plugins.Core.Responders.UnknownEventResponder"/> class.
            </summary>
            <param name="logger">A logger for this event responder.</param>
        </member>
        <member name="M:Mara.Plugins.Core.Responders.UnknownEventResponder.RespondAsync(Remora.Discord.API.Gateway.Events.UnknownEvent,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
    </members>
</doc>
